@model Bayer.Presentation.ViewModels.VagaViewModel

@using Bayer.Presentation.ViewModels
@{
    ViewBag.Title = "CriarVaga";
}

<h2>Criar nova vaga</h2>


@if (Model.Prova != null)
{
    <span>A PROVA FOI SELECIONADA COM SUCESSO</span>
    using (Html.BeginForm("CriarVaga","Admin",FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.Hidden("provaid",Model.Prova.ProvaId.ToString())

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ListaRequisitos, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.ListaRequisitos, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ListaRequisitos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NomeVaga, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.NomeVaga, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeVaga, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TextoAprovacao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.TextoAprovacao, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TextoAprovacao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TextoReprovacao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.TextoReprovacao, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TextoReprovacao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataInicioInscricao, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.DataInicioInscricao, new { htmlAttributes = new { @class = "form-control",@Value = DateTime.Today.ToString("yyyy-MM-dd"),@type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.DataInicioInscricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DataTerminoInscricao, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.DataTerminoInscricao, new { htmlAttributes = new { @class = "form-control",@Value = DateTime.Today.ToString("yyyy-MM-dd"),@type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.DataTerminoInscricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Confirmar prova" class="btn btn-primary btn-user btn-block" />
                </div>
            </div>
        </div>
    }
}
else
{
    using (Html.BeginForm("CriarVaga", "Admin", FormMethod.Get))
    {
        <h3>Primeiro precisamos criar uma prova para a vaga</h3>
        <h4>Escolha uma prova sem uma vaga vinculada ou crie uma nova prova</h4>
        @Html.DropDownList("ddlprova", new SelectList(ViewBag.Provas ?? string.Empty, "Value", "Text"), "SELECIONE UMA PROVA...", new { @class = "form-control" })

        <br />
        <br />

        <div class="col-md-5">
            <input type="submit" value="Escolher vaga" class="btn btn-primary btn-user btn-block" />
        </div>

        <br />
        <br />
    }

    <a href="@Url.Action("CriarProva","Admin")">Criar Nova Prova</a>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
